// Code generated by MockGen. DO NOT EDIT.
// Source: person.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mocktranslator is a mock of translator interface.
type Mocktranslator struct {
	ctrl     *gomock.Controller
	recorder *MocktranslatorMockRecorder
}

// MocktranslatorMockRecorder is the mock recorder for Mocktranslator.
type MocktranslatorMockRecorder struct {
	mock *Mocktranslator
}

// NewMocktranslator creates a new mock instance.
func NewMocktranslator(ctrl *gomock.Controller) *Mocktranslator {
	mock := &Mocktranslator{ctrl: ctrl}
	mock.recorder = &MocktranslatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mocktranslator) EXPECT() *MocktranslatorMockRecorder {
	return m.recorder
}

// RudimentaryTranslator mocks base method.
func (m *Mocktranslator) RudimentaryTranslator() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RudimentaryTranslator")
	ret0, _ := ret[0].(string)
	return ret0
}

// RudimentaryTranslator indicates an expected call of RudimentaryTranslator.
func (mr *MocktranslatorMockRecorder) RudimentaryTranslator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RudimentaryTranslator", reflect.TypeOf((*Mocktranslator)(nil).RudimentaryTranslator))
}
